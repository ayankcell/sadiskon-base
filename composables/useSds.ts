//@ts-ignore
const placeHolder = (url = '', { showSVG = false, width = 10, height = 10 } = {}) => {
    /** kalau tidak ada url atau tampilkan SVG */
    if (url == '' || showSVG) {
        const fill = '#cccccc'
        const svg = `<svg fill="${fill}" width="${width}" height="${height}" version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" overflow="inherit"><rect width="${width}" height="${height}" rx="${width / 25}" ry="${width / 25}"/>
    <circle fill="#ffffff33" r="${height / 5}" cy="${height / 2}">
    <animate attributeName="r" values="0;10;${height / 2};10;0" dur="2s" repeatCount="indefinite"/>
    <animateTransform attributeName="transform" attributeType="XML" type="translate" from="-${width}" to="${width * 2}" dur="2s" repeatCount="indefinite" />
    </circle>
    </svg>`;
    //     const svg = `<svg fill="${fill}" width="${width}" height="${height}" version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" overflow="inherit"><rect width="300" height="200"/>
    //     <path fill="#777" transform="translate(${width/2-25},${height/2-25})" d="M23.021 50.049c-4.665 -0.501 -8.188 -1.728 -11.824 -4.117 -2.038 -1.338 -4.625 -3.768 -6.077 -5.706C2.856 37.204 1.231 33.602 0.519 30.031c-0.262 -1.313 -0.496 -3.142 -0.496 -3.863v-0.276h4.158l0.121 1.245a21.125 21.125 0 0 0 4.581 11.157c0.839 1.039 2.552 2.678 3.644 3.488 7.481 5.546 17.619 5.518 25.044 -0.07 6.671 -5.021 9.698 -13.694 7.617 -21.826C43.159 11.951 36.606 5.92 28.538 4.563l-1.318 -0.222 -0.022 -0.382a88.659 88.659 0 0 1 -0.049 -2.078L27.122 0.185l0.733 0.064c2.792 0.245 6.658 1.489 9.326 3.001 6.905 3.913 11.45 10.54 12.613 18.392 0.263 1.776 0.239 5.411 -0.046 7.169 -1.019 6.266 -4.189 11.782 -9.04 15.726 -1.962 1.595 -4.85 3.228 -7.237 4.09 -1.289 0.466 -3.523 1.028 -4.932 1.239 -0.989 0.149 -4.686 0.27 -5.517 0.181zm-7.106 -11.052c-1.204 -0.62 -2.903 -1.681 -2.904 -1.813 0 -0.046 0.274 -0.381 0.61 -0.744 0.514 -0.558 16.459 -22.108 16.564 -22.388 0.116 -0.309 -0.952 0.566 -3.067 2.512 -3.022 2.78 -6.059 5.105 -7.818 5.988 -2.539 1.274 -4.233 0.892 -6.639 -1.494 -1.464 -1.453 -2.563 -3.085 -2.726 -4.053 -0.149 -0.882 0.538 -2.025 2.332 -3.881 1.42 -1.469 2.529 -2.386 3.373 -2.788 0.596 -0.285 0.656 -0.294 1.222 -0.197 1.318 0.226 2.56 1.037 4.059 2.65 1.534 1.651 2.348 3.008 2.342 3.902 -0.003 0.458 -0.267 1.043 -0.843 1.866l-0.451 0.645 0.965 -0.937c0.531 -0.515 1.647 -1.567 2.48 -2.338a561.221 561.221 0 0 0 3.234 -3.026c2.624 -2.476 3.582 -3.219 4.153 -3.219 0.316 0 2.25 1.105 3.523 2.013l0.619 0.441 -0.626 0.701c-0.483 0.54 -16.156 21.725 -16.512 22.317 -0.236 0.392 1.038 -0.653 2.747 -2.255 3.034 -2.843 6.53 -5.513 8.34 -6.368 2.435 -1.15 4.105 -0.716 6.462 1.676 2.47 2.507 3.131 3.935 2.467 5.333 -0.67 1.413 -3.719 4.362 -5.463 5.284 -1.261 0.665 -2.856 0 -4.892 -2.042 -1.713 -1.718 -2.686 -3.226 -2.686 -4.167 0 -0.683 0.208 -1.062 1.598 -2.913 0.125 -0.166 -2.104 1.926 -4.526 4.248 -4.594 4.405 -6.019 5.605 -6.668 5.613 -0.094 0.001 -0.665 -0.253 -1.269 -0.563zm18.281 -4.315c0.851 -0.681 1.763 -1.841 1.763 -2.241 0 -0.502 -1.145 -1.882 -1.876 -2.26 -0.607 -0.313 -0.949 -0.253 -1.556 0.278 -0.976 0.854 -1.647 1.694 -1.647 2.063 0 0.769 1.127 2.05 2.119 2.41 0.462 0.167 0.75 0.107 1.195 -0.25zM17.412 18.824c0.605 -0.475 1.752 -1.841 1.752 -2.087 0 -0.555 -1.292 -2.127 -1.986 -2.417 -0.56 -0.234 -0.829 -0.184 -1.403 0.259 -0.555 0.429 -1.406 1.386 -1.649 1.857 -0.133 0.256 -0.128 0.32 0.056 0.735 0.483 1.091 1.642 2.058 2.492 2.077 0.108 0.002 0.439 -0.188 0.738 -0.422zM0.12 22.188c0 -0.513 0.475 -2.876 0.818 -4.067 1.048 -3.64 3.219 -7.463 5.663 -9.97l0.794 -0.814L8.728 8.875l1.332 1.539 -0.384 0.439c-0.851 0.974 -1.609 1.949 -2.162 2.784 -0.843 1.272 -1.863 3.411 -2.362 4.952 -0.409 1.264 -0.832 3.12 -0.832 3.647v0.239H0.12ZM13.431 7.166a66.558 66.558 0 0 0 -1.288 -1.536c-0.597 -0.696 -1.084 -1.289 -1.082 -1.318 0.015 -0.244 3.802 -2.199 5.379 -2.777 1.363 -0.5 3.401 -1.013 4.876 -1.23 1.455 -0.213 3.649 -0.353 4.036 -0.256l0.258 0.064v4.07l-1.587 0.056c-3.336 0.116 -6.476 1.018 -9.392 2.696 -0.476 0.274 -0.894 0.498 -0.931 0.498 -0.036 0 -0.157 -0.121 -0.268 -0.268z"> <animate attributeName="opacity" values="0.5;1;0.5" dur="2s" repeatCount="indefinite"/></path>
    //   </svg>`

        return 'data:image/svg+xml;base64,' + btoa(svg)
    } else {
        /** gambar kecil */
        const img = useImage()
        return img(url, { width: width, height: height, lb: `${width},${height},#ffffff` }, { provider: 'photon' })
    }
}

const couponSVG = (tailClass = '', fill = 'text-gray-300') => {
    const svg = `<svg width="100" height="100" class="fill-current ${fill} ${tailClass}" viewBox="0 0 3 3" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M1.875.75a.125.125 0 0 1-.25 0H.375V1a.624.624 0 0 1 0 1v.25h1.25a.125.125 0 0 1 .25 0h.75V2a.624.624 0 0 1 0-1V.75h-.75Zm1 1.5a.25.25 0 0 1-.25.25H.375a.25.25 0 0 1-.25-.25v-.389l.063-.036A.375.375 0 0 0 .375 1.5a.375.375 0 0 0-.188-.325l-.062-.036V.75A.25.25 0 0 1 .375.5h2.25a.25.25 0 0 1 .25.25v.389l-.063.036a.375.375 0 0 0-.187.325c0 .136.072.258.188.325l.063.036v.389ZM1.75 2a.125.125 0 1 1 0-.25.125.125 0 0 1 0 .25Zm0-.375a.125.125 0 1 1 0-.25.125.125 0 0 1 0 .25Zm0-.375a.125.125 0 1 1 0-.25.125.125 0 0 1 0 .25Z"/></svg>`
    return svg
}

/** get innerHTML from html string */
const stripTags = (str: String) => {
    if ((str === null) || (str === ''))
        return false;
    else
        str = str.toString();

    // Regular expression to identify HTML tags in
    // the input string. Replacing the identified
    // HTML tag with a null string.
    return str.replace(/(<([^>]+)>)/ig, '');
}

/** generate canonical */
const canonicalGen = (route: Object) => {
    //@ts-ignore
    return route.path.endsWith("/") ? route.path : route.path + "/";
}
export default function () {
    return {
        placeHolder,
        stripTags,
        couponSVG,
        canonicalGen,
    }
}